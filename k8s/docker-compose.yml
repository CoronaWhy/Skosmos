version: '3'

services:
version: '3'
services:
    reverse-proxy:
    # The official v2 Traefik docker image
      image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
      command:
        - "--api.insecure=true"
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"
        - "--providers.docker.network=traefik"
        - "--entrypoints.web.address=:80"
        - "--entrypoints.websecure.address=:443"
        #section for SSL redirection
        - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
        - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
        - "--certificatesresolvers.myresolver.acme.tlschallenge=true" #Enable TLS-ALPN-01 to generate and renew ACME certs
        - "--certificatesresolvers.myresolver.acme.email=${useremail}"
        - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      ports:
        # The HTTP port
        - "80:80"
        # The HTTPS port
        - "443:443"
        # The Web UI (enabled by --api.insecure=true)
        - "8089:8080"
      volumes:
        # So that Traefik can listen to the Docker events
        - /var/run/docker.sock:/var/run/docker.sock
        # volume to store letsencrypt certificates
        - "./letsencrypt:/letsencrypt"
      networks:
        - traefik

    whoami:
      networks:
        - traefik
      image: "containous/whoami"
      container_name: "whoami"
      labels:
        - "traefik.enable=true"
          # - "traefik.http.routers.whoami.entrypoints=web"
        - "traefik.http.routers.whoami.rule=Host(`whoami.${traefikhost}`)"
        - "traefik.http.routers.whoami.tls=true"
        - "traefik.http.routers.whoami.tls.certresolver=myresolver"

    fuseki:
      networks:
        - traefik
      container_name: skosmos-fuseki
      image: coronawhy/fuseki
      environment:
        - ADMIN_PASSWORD=admin
        - JVM_ARGS=-Xmx6g 
          #--config=/data/skosmos.ttl
        - FUSEKI_DATASET_1=skosmos
        - FUSEKI_ADDITIONAL_ARGS=/data/jena-text.jar
      ports:
       - 3030:3030
    # You can uncomment the line below to have a local volume bound onto the container, or
    # visit https://hub.docker.com/r/stain/jena-fuseki/ for other alternatives
      volumes:
        - ../config/config.ttl:/fuseki/config.ttl
        - ../config/skosmos.ttl:/data/skosmos.ttl
        - ../config/fuseki-server:/jena-fuseki/fuseki-server
        - ../data/fuseki-data:/fuseki/databases
        - ../data/fuseki-input:/data
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.fuseki.rule=Host(`fuseki.${traefikhost}`)"
        - "traefik.http.services.fuseki.loadbalancer.server.port=3030"
        - "traefik.http.routers.fuseki.tls=true"
        - "traefik.http.routers.fuseki.tls.certresolver=myresolver"

    skosmos:
      networks:
        - traefik
      container_name: skosmos
      image: coronawhy/skosmos
      volumes:
        - ../:/var/www/html
      ports:
        - 8000:80
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.skosmos.rule=Host(`skosmos.${traefikhost}`)"
        - "traefik.http.services.skosmos.loadbalancer.server.port=80"
        - "traefik.http.routers.skosmos.tls=true"
        - "traefik.http.routers.skosmos.tls.certresolver=myresolver"
      depends_on:
        - fuseki

networks:
  traefik:
    external: true
# once the environment has been created:
# load example vocabulary
# >curl -I -X POST -H Content-Type:text/turtle -T yso.ttl -G http://localhost:3030/skosmos/data
